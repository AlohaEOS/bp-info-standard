{
  "title": "BlockProducer",
  "description": "Information about a block producer on the EOS blockchain",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "location": {
      "type": "object",
      "required": [
        "name",
        "country"
      ],
      "properties": {
        "name": {
          "description": "Location in human readable format [City, State]",
          "type": "string"
        },
        "country": {
          "description": "Country code [XX]",
          "type": "string"
        },
        "latitude": {
          "description": "Latitude in decimal degrees",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude in decimal degrees",
          "type": "number"
        }
      }
    }
  },
  "type": "object",
  "required": [
    "producer_account_name",
    "producer_public_key",
    "org",
    "nodes"
  ],
  "additionalProperties": false,
  "properties": {
    "producer_account_name": {
      "$id": "/properties/producer_account_name",
      "description": "Producer account name",
      "type": "string",
      "maxLength": 12,
      "minLength": 1
    },
    "producer_public_key": {
      "$id": "/properties/producer_public_key",
      "description": "Public key starting with EOS",
      "type": "string",
      "maxLength": 53,
      "minLength": 53
    },
    "org": {
      "type": "object",
      "properties/location": {
        "location": {
          "$ref": "#/definitions/location",
          "description": "Organization location",
          "type": "location"
        },
        "candidate_name": {
          "$id": "/properties/org/properties/candidate_name",
          "description": "Producer/organization name",
          "type": "string"
        },
        "website": {
          "$id": "/properties/org/properties/website",
          "description": "Organization website",
          "type": "string"
        },
        "code_of_conduct": {
          "$id": "/properties/org/properties/code_of_conduct",
          "description": "Link to Code of Conduct",
          "type": "string"
        },
        "ownership_disclosure": {
          "$id": "/properties/org/properties/ownership_disclosure",
          "description": "Link to company ownership disclosure",
          "type": "string"
        },
        "email": {
          "$id": "/properties/org/properties/email",
          "description": "Organization email",
          "type": "string"
        },
        "branding": {
          "type": "object",
          "properties":{
            "logo_256": {
              "$id": "/properties/org/properties/branding/properties/logo_256",
              "description": "Link to Organization logo [PNG format, 256x256]",
              "type": "string"
            },
            "logo_1024": {
              "$id": "/properties/org/properties/branding/properties/logo_1024",
              "description": "Link to Organization logo [PNG format, 1024x1024]",
              "type": "string"
            },
            "logo_svg": {
              "$id": "/properties/org/properties/branding/properties/logo_svg",
              "description": "Link to Organization logo [SVG format]",
              "type": "string"
            }
          }
        },
        "social": {
          "type": "object",
          "properties": {
            "facebook": {
              "description": "group/page address only, not the entire url",
              "type": "String"
            },
            "github": {
              "description": "username only",
              "type": "String"
            },
            "keybase": {
              "description": "username only",
              "type": "String"
            },
            "reddit": {
              "description": "username only",
              "type": "String"
            },
            "steemit": {
              "description": "username only, WITHOUT @",
              "type": "String"
            },
            "telegram": {
              "description": "username only",
              "type": "String"
            },
            "twitter": {
              "description": "username only",
              "type": "String"
            },
            "wechat": {
              "description": "username only",
              "type": "String"
            },
            "youtube": {
              "description": "channel address only",
              "type": "String"
            }
          }
        }
      },
      "required": [
        "location",
        "candidate_name",
        "website"
      ]
    },
    "nodes": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/definitions/location",
            "description": "Node location"
          },
          "is_producer": {
            "description": "Is this node a producer? (deprecated: use node_type instead)",
            "type": "boolean"
          },
          "node_type": {
            "description": "Type of service",
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["producer", "full", "query"]
            }
          },
          "p2p_endpoint": {
            "description": "EOSIO P2P endpoint (host:port)",
            "type": "string"
          },
          "bnet_endpoint": {
            "description": "EOSIO BNET endpoint (host:port)",
            "type": "string"
          },
          "api_endpoint": {
            "description": "EOSIO HTTP endpoint (http://host:port)",
            "type": "string"
          },
          "ssl_endpoint": {
            "description": "EOSIO HTTPS endpoint (https://host:port)",
            "type": "string"
          }
        }
      }
    }
  }
}
